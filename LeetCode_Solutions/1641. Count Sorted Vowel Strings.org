#+title: 1641. Count Sorted Vowel Strings
#+date: <2022-05-11 ÖÜÈý>

#+begin_src cpp
class Solution {
public:
    int countVowelStrings(int n) {
        vector<vector<int>> dp(n, vector<int>(5, 1));
        int i, j;
        for (i = 1; i < n; i++) {
            dp[i][0] = accumulate(dp[i - 1].begin(), dp[i - 1].end(), 0);
            for (j = 1; j < 4; j++)
                dp[i][j] = dp[i][j - 1] - dp[i - 1][j - 1];
            dp[i][j] = 1;
        }
        cout << i << " " << n;
        return accumulate(dp[n - 1].begin(), dp[n - 1].end(), 0);
        //return 0;
    }
};
#+end_src

#+begin_src ruby
# @param {Integer} n
# @return {Integer}
def count_vowel_strings(n)
    dp = [[1, 1, 1, 1, 1]]
    for i in 1...n
        dp[i] = Array.new(5)
        dp[i][0] = dp[i - 1].sum
        dp[i][1] = dp[i][0] - dp[i - 1][0]
        dp[i][2] = dp[i][1] - dp[i - 1][1]
        dp[i][3] = dp[i][2] - dp[i - 1][2]
        dp[i][4] = 1
    end
    dp[-1].sum
end
#+end_src
